

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        run: |
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY=portfolio
          IMAGE_TAG=${{ github.run_number }}

          echo "Building image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to EC2
    needs: build
    runs-on: ubuntu-latest
    
    steps:    
      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            ECR_REPOSITORY=portfolio
            IMAGE_TAG=${{ github.run_number }}

            echo "Logging in to ECR..."
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
              | docker login --username AWS --password-stdin $ECR_REGISTRY

            echo "Stopping old container (if exists)..."
            docker rm -f resume || true

            echo "Pulling latest image..."
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            echo "Running new container..."
            docker run -d --name resume -p 8080:5001 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG